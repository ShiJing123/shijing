笔试的输入输出总结
Java
1.import java.util.Scanner;
  Scanner sc=new Scanner(System.in);
  sc.nextInt()         #获得整数
  sc.nextLine()        #获取一行
                       
  sc.next()            #获取一个输入
  int[] aa=new int[n]          #输入为数组时
  for(int x:aa)
  {}                          #遍历数组时很方便
  for(int i;i<n;i++){
      aa[i]=sc.nextInt()
  }
  

python3
1.输入为空格输入的二维数组
3
10 3 
5 7
8 5

n=int(input())
m=[[0 for i in range(2)] for j in range(n)]          
print(m)
for k in range(n):
    m[k][0],m[k][1]=map(int,input().split())  #切分  
print(m)
max=m[0][1]
for p in m:
    if p[1]
1.二维数组的输入，创建m*n维的二维数组并从键盘接收输入
import os
n=input()
m=int(n)
mm=[[0 for i in range(m)] for j in range(m)]
cnt=0
for i in range(m):
    for j in range(m):
         aa=input()
         mm[i][j]=int(aa)
         
2.接收1维数组
m=input（）
mm=[0 for i in range(m)]
mm[i]=int(input()) for i in range(m)


3.python输出格式
  输出的结果不换行：
  print(objects,' ',end='')
  
  print的完整格式为print(objects,sep,end,file,flush),其中后面4个为可选参数
        sep
        在输出字符串之间插入指定字符串，默认是空格，例如：
        >>>print("a","b","c",sep="**")
        a**b**c
        end
        在print输出语句的结尾加上指定字符串，默认是换行(\n),例如：
        >>>print("a",end="$")
        a$
        print默认是换行，即输出语句后自动切换到下一行，对于python3来说，如果要实现输出不换行的功能，那么可以设置end=''（python2可以在print语句之后加“，”实现不换行的功能）
        file
        将文本输入到file-like对象中，可以是文件，数据流等等，默认是sys.stdout
        >>>f = open('abc.txt','w')
        >>>print('a',file=f)
        flush
        flush值为True或者False，默认为Flase,表示是否立刻将输出语句输入到参数file指向的对象中（默认是sys.stdout）例如：
        >>>f = open('abc.txt','w')
        >>>print('a',file=f)
        可以看到abc.txt文件这时为空，只有执行f.close()之后才将内容写进文件。
        如果改为：
        >>>print('a',file=f,flush=True)
        则立刻就可以看到文件的内容



3.字符串访问
京东笔试题：相似字符串个数
 import time
 sss = time.time()
 S = 'ababcb'
 T = 'xyx'
 zistr = [S[i:i+len(T)] for i in range(0, len(S)-len(T)+1)]              #从S字符串截取出T长度的所有字符串
 query = {}                                                                 
 [query.__setitem__(k, None) for k in T if k not in query.keys()]       
 #__setitem__(self,key,value)：该方法应该按一定的方式存储和key相关的value。在设置类实例属性时自动调用的。
 print(zistr,query)
 ans = []
 for ss in zistr:
         ssx = []
         [ssx.append(x) for x in ss if x not in ssx]
         print('ssx',ssx)
         if len(ssx) == len(set(T)):
             print('enumerate',list(enumerate(query.keys())))   
             #enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。
             #seasons = ['Spring', 'Summer', 'Fall', 'Winter']
             # >>> list(enumerate(seasons))
              #        [(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]
               #>>> list(enumerate(seasons, start=1))       # 小标从 1 开始
                #      [(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]
             for i, k in enumerate(query.keys()):
                 query[k] = ssx[i]
                 print('query',query)
         else:
             continue
         new = ''.join([query[x] for x in T])    #join函数将字符连接在一起
        print('new',new)
         ans.append(1) if ss == new else ans.append(0)
         print('ans',ans)
 print('query',query)
 x = solve(S, T)
 sss = time.time() - sss
print('相似字符串数:', x, '计算时间:', sss)


